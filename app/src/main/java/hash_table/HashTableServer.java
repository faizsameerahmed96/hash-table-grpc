/*
 * This source file was generated by the Gradle 'init' task
 */
package hash_table;

import hash_table.HashTableServiceGrpc.HashTableServiceImplBase;
import io.grpc.Server;
import io.grpc.ServerBuilder;
import io.grpc.stub.StreamObserver;

import java.util.HashMap;

public class HashTableServer {
    public static void main(String[] args) throws Exception {
        Server server = ServerBuilder.forPort(8005).addService(new HashTableServiceImpl()).build().start();

        System.out.println("Server started, listening on " + server.getPort());

        server.awaitTermination();
    }

    static class HashTableServiceImpl extends HashTableServiceImplBase {
        private final HashMap<String, String> hashTable = new HashMap<>();

        @Override
        public void put(HashTable.PutRequest request, StreamObserver<HashTable.PutReply> responseObserver) {
            this.hashTable.put(request.getKey(), request.getValue());

            HashTable.PutReply reply = HashTable.PutReply.newBuilder().setKey(request.getKey()).setValue(request.getValue()).build();
            responseObserver.onNext(reply);
            responseObserver.onCompleted();
        }

        @Override
        public void get(HashTable.GetRequest request, StreamObserver<HashTable.GetReply> responseObserver) {
            String result = this.hashTable.getOrDefault(request.getKey(), "not found");

            HashTable.GetReply reply = HashTable.GetReply.newBuilder().setValue(result).build();
            responseObserver.onNext(reply);
            responseObserver.onCompleted();
        }
    }
}
